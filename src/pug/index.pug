include includes/github-button.pug
include includes/linkedin-button.pug
doctype html
html(lang='en')

    head

        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')
        meta(name='description', content='')
        meta(name='author', content='')

        title Trevor Mack - Projects Site

        // Favicon
        link(rel='icon', type='image/x-icon', href='assets/favicon.ico')

        // Font Awesome icons (free version)
        script(src='https://use.fontawesome.com/releases/v5.15.4/js/all.js', crossorigin='anonymous')

        // Google fonts
        link(href='https://fonts.googleapis.com/css?family=Montserrat:400,700', rel='stylesheet', type='text/css')
        link(href='https://fonts.googleapis.com/css?family=Lato:400,700,400italic,700italic', rel='stylesheet', type='text/css')

        // Core theme CSS (includes Bootstrap)
        link(href='css/styles.css', rel='stylesheet')

    body#page-top

        // Navigation
        nav#mainNav.navbar.navbar-expand-lg.bg-secondary.text-uppercase.fixed-top
            .container
                a.navbar-brand(href='#page-top') Trevor's Projects
                button.navbar-toggler.text-uppercase.font-weight-bold.bg-primary.text-white.rounded(type='button', data-bs-toggle='collapse', data-bs-target='#navbarResponsive', aria-controls='navbarResponsive', aria-expanded='false', aria-label='Toggle navigation')
                    | Menu 
                    i.fas.fa-bars
                #navbarResponsive.collapse.navbar-collapse
                    ul.navbar-nav.ms-auto
                        li.nav-item.mx-0.mx-lg-1
                            a.nav-link.py-3.px-0.px-lg-3.rounded(href='#projects') Projects
                        li.nav-item.mx-0.mx-lg-1
                            a.nav-link.py-3.px-0.px-lg-3.rounded(href='#about') About Me
                        li.nav-item.mx-0.mx-lg-1
                            a.nav-link.py-3.px-0.px-lg-3.rounded(href='#contact') Contact

        // Masthead
        header.masthead.bg-primary.text-white.text-center
            .container.d-flex.align-items-center.flex-column
                // Masthead Avatar Image
                img.masthead-avatar.mb-5(src='assets/img/profile.png', alt='...')
                // Masthead Heading
                h1.masthead-heading.text-uppercase.mb-0 Trevor Mack
                // Icon Divider
                .divider-custom.divider-light
                    .divider-custom-line
                    .divider-custom-icon
                        i.fas.fa-star
                    .divider-custom-line
                // Masthead Subheading
                p.masthead-subheading.font-weight-light.mb-0 Computer Science Student

        // Projects Section
        section#projects.page-section.projects
            .container
                h2.page-section-heading.text-center.text-uppercase.text-secondary.mb-0 Example Projects
                // Icon Divider
                .divider-custom
                    .divider-custom-line
                    .divider-custom-icon
                        i.fas.fa-star
                    .divider-custom-line

                
                h3.text-center.text-uppercase.text-secondary Mastermind
                .text-center
                    +github("https://github.com/Tnwmack/Mastermind", "GitHub Source")
                .divider-custom
                    .divider-custom-line
                .row
                    .col-lg-3
                    .col-lg-6
                        p Mastermind is a board game for two players. The codemaker creates an answer by choosing random colored pegs. The codebreaker makes a guess, and the codemaker reports on the correctness of the guess. The answer key tells the codebreaker how many pegs they have as the correct color and in the correct column, and how many they have as the right color, but not in the right column.
                        p This program uses algorithms to make guesses while acting as the codebreaker. I developed three solver methods for making guesses. The first is the Knuth algorithm, essentially an optimized brute force approach. A genetic algorithm is a more exciting option. The genetic algorithm optimizes a pool of possibilities towards the correct solution. The Knuth algorithm works well for fewer possibilities but uses excessive memory with large collections. The third solver is a mix of the other two solvers, where the genetic algorithm narrows down the possibilities to make the Knuth solver more efficient.
                        p The program allows the use of up to 20 colors with 10 columns. The total possibilities are up to 20<sup>10</sup> (10.2 trillion) solutions.
                    .col-lg-3
                        .container
                            .row.justify-content-center
                                h4.text-center Stats
                            .row
                                table.table
                                    tr
                                        th Language
                                        td C#: 2,700 lines
                                    tr 
                                        th Skills employed
                                        td 
                                            ul 
                                                li Learning algorithms
                                                li Multi-threading
                                                li Custom controls
                                    tr
                                        th External libraries
                                        td None
                h4.text-center.text-secondary Screenshots
                .divider-custom
                    .divider-custom-line
                .row.justify-content-center
                    .col-md-5.col-lg-3.m-4
                        .row Set up for a new game.
                        .row 
                            img.mt-4(src="assets/img/mastermind/1.png", alt="Mastermind 1")

                    .col-md-5.col-lg-3.m-4
                        .row Solved in 5 moves with Knuth.
                        .row 
                            img.mt-4(src="assets/img/mastermind/2.png", alt="Mastermind 2")

                    .col-md-5.col-lg-3.m-4
                        .row A game with 20 colors, 10 columns and 20 rows. The genetic settings are shown here, with optimistic values.
                        .row 
                            img.mt-4(src="assets/img/mastermind/3.png", alt="Mastermind 3")

                    .col-md-5.col-lg-3.m-4
                        .row The genetic algorithm solved this problem very quickly in 10 guesses.
                        .row 
                            img.mt-4(src="assets/img/mastermind/4.png", alt="Mastermind 4")

                    .col-md-5.col-lg-3.m-4
                        .row Sometimes it takes longer, 18 guesses in this case.
                        .row 
                            img.mt-4(src="assets/img/mastermind/5.png", alt="Mastermind 5")


                h3.text-center.text-uppercase.text-secondary.mt-5 Team Project Website
                .text-center
                    +github("https://github.com/Tnwmack/TeamProject2021", "GitHub Source")
                .divider-custom
                    .divider-custom-line
                .row
                    .col-lg-3
                    .col-lg-5
                        p As part of a team, I helped create a website for a fictitious company that shows the products the company sells and an employee directory. The project was in my junior year, so I was the senior developer team member. There were two other developers and a project leader. Due to university policies on academic privacy, I'm not allowed to credit the other team members or link to the original GitHub repository, but I can share the code as a whole. 
                        p I was responsible for setting up the project and general architecture. We used Vue for the frontend with Bootstrap for styling and ASP.NET for the API backend. I created the visual layout and code structure for the frontend and the API connection logic. I was also responsible for the product display page and home page. I designed the API in Swagger, created the API controllers, and created tests in Postman.  I deployed the project on an Amazon Web Services (AWS) EC2 server, using Nginx as a static file host and API proxy.
                    .col-lg-4
                        .container
                            .row.justify-content-center
                                h4.text-center Stats
                            .row
                                table.table
                                    tr
                                        th Languages
                                        td C#: 2,400 lines<br>JavaScript: 1,800 lines
                                    tr 
                                        th Skills employed
                                        td 
                                            ul 
                                                li Web design
                                                li API design
                                                li Teamwork
                                    tr
                                        th External libraries
                                        td Vue 3, ASP.NET Core 5,<br>NHibernate, Swagger,<br>Bootstrap 5
                h4.text-center.text-secondary Screenshots
                .divider-custom
                    .divider-custom-line
                .row.justify-content-center
                    .col-md-8.col-lg-5.m-4
                        .row The product page that I wrote. I also implemented the search function, which can search by name or id. 
                        .row 
                            img.mt-4(src="assets/img/corpsite/1.png", alt="Corpsite 1")
                    .col-md-8.col-lg-5.m-4
                        .row The employee directory page. I did not implement the design, but the code was based on the product page.
                        .row 
                            img.mt-4(src="assets/img/corpsite/2.png", alt="Corpsite 2")
                    .col-md-8.col-lg-5.m-4
                        .row Some of the API endpoints shown in the Swagger documentation.
                        .row 
                            img.mt-4(src="assets/img/corpsite/3.png", alt="Corpsite 3")



        // About Section
        section#about.page-section.bg-primary.text-white.mb-0
            .container
                // About Section Heading
                h2.page-section-heading.text-center.text-uppercase.text-white About Me
                // Icon Divider
                .divider-custom.divider-light
                    .divider-custom-line
                    .divider-custom-icon
                        i.fas.fa-star
                    .divider-custom-line
                // About Section Content
                .row.justify-content-center
                    .col-lg-7.text-light
                        p I'm primarily a self-taught developer. I started programming when I was 13. I've worked on dozens of personal projects over the years, including full-stack sites, games, embedded systems, operating systems, and device drivers. I am also interested in many sciences, such as physics, classical mechanics, and chemistry. I'm currently a senior at Franklin University. I expect to graduate in the summer of 2022. I'm currently looking for development internships or entry-level software developer positions.
                        
                        h4 Primary Skills

                        table.table.text-light
                            thead 
                                tr 
                                    th Skill
                                    th Comments
                            tbody 
                                tr 
                                    td C#
                                    td C# is my primary language. I am very comfortable using it. I've created dozens of projects on various platforms (Windows, ASP.NET, and Xamarin on Android and iOS) and libraries.

                                tr
                                    td JavaScript
                                    td JavaScript is my secondary language. I've used it for site scripting, single-page frameworks (Angular and Vue), and in the backend with Node.js/Express.js.

                        h4 Secondary Skills

                        table.table.text-light
                            thead 
                                tr 
                                    th Skill
                                    th Comments
                            tbody 
                                tr 
                                    td C/C++
                                    td I first started programming by learning C++. Although I don't use C++ very often anymore, I'm still comfortable using it. I've used regular C when programming embedded systems, retro gaming consoles, and operating system drivers.
                                tr 
                                    td Java
                                    td Schools often use Java, which is where I've used it. My knowledge of C# helps with Java, but I don't often use it outside of school.
                                tr 
                                    td x86 Assembly
                                    td I am interested in reverse engineering and static analysis. I've spent a fair amount of time debugging, reversing, and analyzing binaries, so I'm comfortable working with assembly.
                                tr 
                                    td HTML/CSS
                                    td HTML and CSS come up frequently in various projects and school assignments, so I'm comfortable with HTML tags and CSS properties and selectors. I am not a web designer, however.
                        
                        h4 Other Skills Used

                        ul 
                            li SQL 
                            li GIT
                            li Linux and the Linux terminal 
                            li Some Amazon Web Services, like EC2, S3 and DynamoDB
                            li Apache/Nginx
                            li Python


        // Contact Section
        section#contact.page-section
            .container
                // Contact Section Heading
                h2.page-section-heading.text-center.text-uppercase.text-secondary.mb-0 Contact Me
                // Icon Divider
                .divider-custom
                    .divider-custom-line
                    .divider-custom-icon
                        i.fas.fa-star
                    .divider-custom-line
                // Contact Links
                .row.justify-content-center
                    .col.d-flex.justify-content-end
                        +linkedin("https://www.linkedin.com/in/trevor-mack-749801202/")
                    .col.d-flex.justify-content-start
                        +github("https://github.com/Tnwmack", "GitHub")

        // Copyright Section
        div.copyright.py-4.text-center.text-white
            .container
                small Copyright &copy; Trevor Mack 2022. Based on the <a href="https://github.com/StartBootstrap/startbootstrap-freelancer">Freelancer</a> template.

        // Bootstrap core JS
        script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js')

        // Core theme JS
        script(src='js/scripts.js')
        script(src='https://cdn.startbootstrap.com/sb-forms-latest.js')